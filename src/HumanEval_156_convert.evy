func int_to_mini_romannumber
    //"
    //    Given a positive integer, obtain its roman numeral equivalent as a string,
    //    and return it in lowercase.
    //    Restrictions: 1 <= num <= 1000
    //
    //    Examples:
    //    >>> int_to_mini_roman(19) == 'xix'
    //    >>> int_to_mini_roman(152) == 'clii'
    //    >>> int_to_mini_roman(426) == 'cdxxvi'
    //    "
    num_ := [1 4 5 9 10 40 50 90 100 400 500 900 1000 ]
    sym := ["I" "IV" "V" "IX" "X" "XL" "L" "XC" "C" "CD" "D" "CM" "M" ]
    i := 12
    res := ""
    while number
        div := None number num_i
        number = number % num_i
        while div
            res = res + symi
            div = div - 1
        end
        i = i - 1
    end
    return res.lower ()

end
func checkcandidate
    assert .candidate (19) == "xix"
    assert .candidate (152) == "clii"
    assert .candidate (251) == "ccli"
    assert .candidate (426) == "cdxxvi"
    assert .candidate (500) == "d"
    assert .candidate (1) == "i"
    assert .candidate (4) == "iv"
    assert .candidate (43) == "xliii"
    assert .candidate (90) == "xc"
    assert .candidate (94) == "xciv"
    assert .candidate (532) == "dxxxii"
    assert .candidate (900) == "cm"
    assert .candidate (994) == "cmxciv"
    assert .candidate (1000) == "m"
    assert true

end
.check (int_to_mini_roman)