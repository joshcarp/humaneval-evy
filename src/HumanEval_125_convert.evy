func split_wordstxt
    //"
    //    Given a string of words, return a list of words split on whitespace, if no whitespaces exists in the text you
    //    should split on commas ',' if no commas exists you should return the number of lower-case letters with odd order in the
    //    alphabet, ord('a') = 0, ord('b') = 1, ... ord('z') = 25
    //    Examples
    //    split_words("Hello world!") ➞ ["Hello", "world!"]
    //    split_words("Hello,world!") ➞ ["Hello", "world!"]
    //    split_words("abcdef") == 3 
    //    "
    if (has txt " ")
        return txt.split ()
    else if (has txt ",")
        return txt.replace ("," " ").split ()
    else
        if (has txt ",")
            return txt.replace ("," " ").split ()
            .len (__evy_listcomp_ := []
            for i := txt:
            if i.islower () .ord (i) % 2 == 0 and
            )
        else
            return .len (__evy_listcomp_ := []
            for i := txt:
            if i.islower () .ord (i) % 2 == 0 and
            )
        end
    end

end
func checkcandidate
    assert .candidate ("Hello world!") == ["Hello" "world!" ]
    assert .candidate ("Hello,world!") == ["Hello" "world!" ]
    assert .candidate ("Hello world,!") == ["Hello" "world,!" ]
    assert .candidate ("Hello,Hello,world !") == ["Hello,Hello,world" "!" ]
    assert .candidate ("abcdef") == 3
    assert .candidate ("aaabb") == 2
    assert .candidate ("aaaBb") == 1
    assert .candidate ("") == 0

end
.check (split_words)