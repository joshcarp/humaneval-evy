func sum_squareslst
    //"You are given a list of numbers.
    //    You need to return the sum of squared numbers in the given list,
    //    round each element in the list to the upper int(Ceiling) first.
    //    Examples:
    //    For lst = [1,2,3] the output should be 14
    //    For lst = [1,4,9] the output should be 98
    //    For lst = [1,3,5,7] the output should be 84
    //    For lst = [1.4,4.2,0] the output should be 29
    //    For lst = [-2.4,1,1] the output should be 6
    //    
    //
    //    "
    
    squared := 0
        squared = squared + pow math.ceil (i) 2
    end
    return squared

end
func checkcandidate
    assert .candidate ([1 2 3 ]) == 14
    assert .candidate ([1.0 2 3 ]) == 14
    assert .candidate ([1 3 5 7 ]) == 84
    assert .candidate ([1.4 4.2 0 ]) == 29
    assert .candidate ([-2.4 1 1 ]) == 6
    assert .candidate ([100 1 15 2 ]) == 10230
    assert .candidate ([10000 10000 ]) == 200000000
    assert .candidate ([-1.4 4.6 6.3 ]) == 75
    assert .candidate ([-1.4 17.9 18.9 19.9 ]) == 1086
    assert .candidate ([0 ]) == 0
    assert .candidate ([-1 ]) == 1
    assert .candidate ([-1 1 0 ]) == 2

end
.check (sum_squares)