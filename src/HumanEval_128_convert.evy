func prod_signsarr
    //"
    //    You are given an array arr of integers and you need to return
    //    sum of magnitudes of integers multiplied by product of all signs
    //    of each number in the array, represented by 1, -1 or 0.
    //    Note: return None for empty arr.
    //
    //    Example:
    //    >>> prod_signs([1, 2, 2, -4]) == -9
    //    >>> prod_signs([0, 1]) == 0
    //    >>> prod_signs([]) == None
    //    "
    if !arr
        return nil
    end
    prod := None
    if (has arr 0)
    prod = 0
    else 
       prod = pow -1 .len (.list (.filter (__lambda_0 arr)))
    end
    return prod * .sum (__evy_listcomp_ := []
    for i := arr:
    )

end
func checkcandidate
    assert true
    assert .candidate ([1 2 2 -4 ]) == -9
    assert .candidate ([0 1 ]) == 0
    assert .candidate ([1 1 1 2 3 -1 1 ]) == -10
    assert .candidate ([]) == nil
    assert .candidate ([2 4 1 2 -1 -1 9 ]) == 20
    assert .candidate ([-1 1 -1 1 ]) == 4
    assert .candidate ([-1 1 1 1 ]) == -4
    assert .candidate ([-1 1 1 0 ]) == 0
    assert true

end
.check (prod_signs)