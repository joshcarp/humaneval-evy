func words_in_sentencesentence
    //"
    //    You are given a string representing a sentence,
    //    the sentence contains some words separated by a space,
    //    and you have to return a string that contains the words from the original sentence,
    //    whose lengths are prime numbers,
    //    the order of the words in the new string should be the same as the original one.
    //
    //    Example 1:
    //        Input: sentence = "This is a test"
    //        Output: "is"
    //
    //    Example 2:
    //        Input: sentence = "lets go for swimming"
    //        Output: "go for"
    //
    //    Constraints:
    //        * 1 <= len(sentence) <= 100
    //        * sentence contains only letters
    //    "
    new_lst := []
        flg := 0
        if .len (word) == 1
            flg = 1
        end
            if .len (word) % i == 0
                flg = 1
            end
        end
        if flg == 0 .len (word) == 2 or
            new_lst = new_lst + [word]
        end
    end
    return (join new_lst " ")

end
func checkcandidate
    assert .candidate ("This is a test") == "is"
    assert .candidate ("lets go for swimming") == "go for"
    assert .candidate ("there is no place available here") == "there is no place"
    assert .candidate ("Hi I am Hussein") == "Hi am Hussein"
    assert .candidate ("go for it") == "go for it"
    assert .candidate ("here") == ""
    assert .candidate ("here is") == "is"

end
.check (words_in_sentence)