func encodemessage
    //"
    //    Write a function that takes a message, and encodes in such a 
    //    way that it swaps case of all letters, replaces all vowels in 
    //    the message with the letter that appears 2 places ahead of that 
    //    vowel in the english alphabet. 
    //    Assume only letters. 
    //    
    //    Examples:
    //    >>> encode('test')
    //    'TGST'
    //    >>> encode('This is a message')
    //    'tHKS KS C MGSSCGG'
    //    "
    vowels := "aeiouAEIOU"
    vowels_replace := .dict (__evy_listcomp_ := []
    for i := vowels:
    )
    message := message.swapcase ()
    return (join __evy_listcomp_ := []
    for i := message:
    if (has vowels i)
    __evy_listcomp_ = vowels_replacei
    else 
       __evy_listcomp_ = i
    end
     "")

end
func checkcandidate
    assert .candidate ("TEST") == "tgst"
    assert .candidate ("Mudasir") == "mWDCSKR"
    assert .candidate ("YES") == "ygs"
    assert .candidate ("This is a message") == "tHKS KS C MGSSCGG"
    assert .candidate ("I DoNt KnOw WhAt tO WrItE") == "k dQnT kNqW wHcT Tq wRkTg"

end
.check (encode)