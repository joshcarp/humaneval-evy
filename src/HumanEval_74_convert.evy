func total_matchlst1 lst2
    //"
    //    Write a function that accepts two lists of strings and returns the list that has 
    //    total number of chars in the all strings of the list less than the other list.
    //
    //    if the two lists have the same number of chars, return the first list.
    //
    //    Examples
    //    total_match([], []) ➞ []
    //    total_match(['hi', 'admin'], ['hI', 'Hi']) ➞ ['hI', 'Hi']
    //    total_match(['hi', 'admin'], ['hi', 'hi', 'admin', 'project']) ➞ ['hi', 'admin']
    //    total_match(['hi', 'admin'], ['hI', 'hi', 'hi']) ➞ ['hI', 'hi', 'hi']
    //    total_match(['4'], ['1', '2', '3', '4', '5']) ➞ ['4']
    //    "
    l1 := 0
        l1 = l1 + .len (st)
    end
    l2 := 0
        l2 = l2 + .len (st)
    end
    if l1 <= l2
        return lst1
        lst2
    else
        return lst2
    end

end
func checkcandidate
    assert true
    assert .candidate ([] []) == []
    assert .candidate (["hi" "admin" ] ["hi" "hi" ]) == ["hi" "hi" ]
    assert .candidate (["hi" "admin" ] ["hi" "hi" "admin" "project" ]) == ["hi" "admin" ]
    assert .candidate (["4" ] ["1" "2" "3" "4" "5" ]) == ["4" ]
    assert .candidate (["hi" "admin" ] ["hI" "Hi" ]) == ["hI" "Hi" ]
    assert .candidate (["hi" "admin" ] ["hI" "hi" "hi" ]) == ["hI" "hi" "hi" ]
    assert .candidate (["hi" "admin" ] ["hI" "hi" "hii" ]) == ["hi" "admin" ]
    assert true
    assert .candidate ([] ["this" ]) == []
    assert .candidate (["this" ] []) == []

end
.check (total_match)