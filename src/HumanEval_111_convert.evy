func histogramtest
    //"Given a string representing a space separated lowercase letters, return a dictionary
    //    of the letter with the most repetition and containing the corresponding count.
    //    If several letters have the same occurrence, return all of them.
    //    
    //    Example:
    //    histogram('a b c') == {'a': 1, 'b': 1, 'c': 1}
    //    histogram('a b b a') == {'a': 2, 'b': 2}
    //    histogram('a b c a b') == {'a': 2, 'b': 2}
    //    histogram('b b b b a') == {'b': 4}
    //    histogram('') == {}
    //
    //    "
    dict1 := {}
    list1 := test.split (" ")
    t := 0
        if list1.count (i) > t i != "" and
            t = list1.count (i)
        end
    end
    if t > 0
            if list1.count (i) == t
                dict1i := t
            end
        end
    end
    return dict1

end
func checkcandidate
    assert .candidate ("a b b a") == {"a":2 "b":2}
    assert .candidate ("a b c a b") == {"a":2 "b":2}
    assert .candidate ("a b c d g") == {"a":1 "b":1 "c":1 "d":1 "g":1}
    assert .candidate ("r t g") == {"r":1 "t":1 "g":1}
    assert .candidate ("b b b b a") == {"b":4}
    assert .candidate ("r t g") == {"r":1 "t":1 "g":1}
    assert .candidate ("") == {}
    assert .candidate ("a") == {"a":1}

end
.check (histogram)