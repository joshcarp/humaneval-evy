func count_numsarr
    //"
    //    Write a function count_nums which takes an array of integers and returns
    //    the number of elements which has a sum of digits > 0.
    //    If a number is negative, then its first signed digit will be negative:
    //    e.g. -123 has signed digits -1, 2, and 3.
    //    >>> count_nums([]) == 0
    //    >>> count_nums([-1, 11, -11]) == 1
    //    >>> count_nums([1, 1, 2]) == 3
    //    "
    func digits_sumn
        neg := 1
        if n < 0
            [n neg ] := [-1 * n -1 ]
        end
        n := __evy_listcomp_ := []
        for i := .str (n):
        n0 := n0 * neg
        return .sum (n)
    
    end
    return .len (.list (.filter (__lambda_3 __evy_listcomp_ := []
    for i := arr:
    )))

end
func checkcandidate
    assert .candidate ([]) == 0
    assert .candidate ([-1 -2 0 ]) == 0
    assert .candidate ([1 1 2 -2 3 4 5 ]) == 6
    assert .candidate ([1 6 9 -6 0 1 5 ]) == 5
    assert .candidate ([1 100 98 -7 1 -1 ]) == 4
    assert .candidate ([12 23 34 -45 -56 0 ]) == 5
    assert .candidate ([-0 pow 1 0 ]) == 1
    assert .candidate ([1 ]) == 1
    assert true

end
.check (count_nums)