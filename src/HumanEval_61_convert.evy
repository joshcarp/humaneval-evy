func correct_bracketingbrackets:string
    //" brackets is a string of "(" and ")".
    //    return True if every opening bracket has a corresponding closing bracket.
    //
    //    >>> correct_bracketing("(")
    //    False
    //    >>> correct_bracketing("()")
    //    True
    //    >>> correct_bracketing("(()())")
    //    True
    //    >>> correct_bracketing(")(()")
    //    False
    //    "
    depth := 0
        if b == "("
            depth = depth + 1
            1
        else
            depth = depth - 1
        end
        if depth < 0
            return false
        end
    end
    return depth == 0

end
METADATA := {}
func checkcandidate
    assert .candidate ("()")
    assert .candidate ("(()())")
    assert .candidate ("()()(()())()")
    assert .candidate ("()()((()()())())(()()(()))")
    assert !.candidate ("((()())))")
    assert !.candidate (")(()")
    assert !.candidate ("(")
    assert !.candidate ("((((")
    assert !.candidate (")")
    assert !.candidate ("(()")
    assert !.candidate ("()()(()())())(()")
    assert !.candidate ("()()(()())()))()")

end
.check (correct_bracketing)