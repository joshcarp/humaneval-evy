// Write a function that takes a string as input and returns the sum of the upper characters only'
// ASCII codes.
// Examples:
//     digitSum("") => 0
//     digitSum("abAB") => 131
//     digitSum("abcCd") => 67
//     digitSum("helloE") => 69
//     digitSum("woArBld") => 131
//     digitSum("aAaaaXa") => 153
func asciiSum:num str:string
    abc := "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
    uppers:{}num
    for i := range (len abc)
        uppers[abc[i]] = i + 65
    end

    result := 0
    for c := range str
        if has uppers c
            result = result + uppers[c]
        end
    end
    return result
end

func test
    assert 0 (asciiSum "")
    assert 131 (asciiSum "abAB")
    assert 67 (asciiSum "abcCd")
    assert 69 (asciiSum "helloE")
    assert 131 (asciiSum "woArBld")
    assert 153 (asciiSum "aAaaaXa")
    assert 151 (asciiSum " How are yOu?")
    assert 327 (asciiSum "You arE Very Smart")
end

// Test boilerplate
fails := 0
total := 0

func assert want:any got:any
    total = total + 1
    if want == got
        return
    end
    wantType := (typeof want)[:2]
    gotType := (typeof got)[:2]
    if (wantType == "[]" or wantType == "{}") and wantType == gotType and (len want) == 0 and (len got) == 0
        return
    end
    fails = fails + 1
    printf "want != got:\n want: %v\n got:  %v\n" want got
end

func print_result
    printf "%2.f of %2.f tests passed\n" (total - fails) total
end

test
print_result
