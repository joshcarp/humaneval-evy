// Out of list of strings, return the longest one. Return the first one in
// case of multiple strings of the same length. Return "" in case the input
// list is empty.
// longest [] // ""
// longest(["a" "b" "c"]) // "a"
// longest(["a" "bb" "ccc"]) "ccc"
func longest:string strings:[]string
    if (len strings) == 0
        return ""
    end
    maxlen := 0
    for s := range strings
        if (len s) > maxlen
            maxlen = (len s)
        end
    end
    for s := range strings
        if (len s) == maxlen
            return s
        end
    end
    return ""
end

func check
    assert "" (longest [])
    assert "x" (longest ["x" "y" "z"])
    assert "zzzz" (longest ["x" "yyy" "zzzz" "www" "kkkk" "abc"])
end

// Test boilerplate
fails := 0
total := 0

func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end

func print_result
    printf "%v of %v tests passed\n" (total - fails) total
end

check
print_result
