func is_simple_power:bool x:num n:num
    if n == 1
        return x == 1
    end
    power := 1
    while power < x
        power = power * n
    end
    return power == x
end
func check candidate:any
    assert true (candidate 16 2)
    assert false (candidate 143214 16)
    assert true (candidate 4 2)
    assert true (candidate 9 3)
    assert true (candidate 16 4)
    assert false (candidate 24 2)
    assert false (candidate 128 4)
    assert false (candidate 12 6)
    assert true (candidate 1 1)
    assert true (candidate 1 12)
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
