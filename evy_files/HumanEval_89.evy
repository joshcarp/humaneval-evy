func encrypt:string s:string
    d := "abcdefghijklmnopqrstuvwxyz"
    out := ""
    for c := range s
        if indexof d s[c] != -1
            out = out + d[(indexof d s[c]+2*2) % 26]
        else
            out = out + s[c]
        end
    end
    return out
end
func check
    fails := 0
    total := 0
    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "This prints if this assert fails %v (good for debugging!)\n" want got
        end
    end
    assert "lm" (encrypt "hi")
    assert "ewhjklnop" (encrypt "asdfghjkl")
    assert "kj" (encrypt "gf")
    assert "ix" (encrypt "et")
    assert "jeiajeaijeiak" (encrypt "faewfawefaewg")
    assert "lippsqcjvmirh" (encrypt "hellomyfriend")
    assert "hbdhpqrmpjylqmpyjlpmlyjrqpmqryjlpmqryjljygyjl" (encrypt "dxzdlmnilfuhmilufhlihufnmlimnufhlimnufhfucufh")
    assert "e" (encrypt "a")
    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
