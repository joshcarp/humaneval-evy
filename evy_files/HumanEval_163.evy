func generate_integers:[]num a:num b:num
    lower := max 2 (min a b)
    upper := min 8 (max a b)
    result:[]num
    for i := range lower (upper+1)
        if i % 2 == 0
            result = result + [i]
        end
    end
    return result
end
func check candidate:any
    assert [2 4 6 8] (candidate 2 10) "Test 1"
    assert [2 4 6 8] (candidate 10 2) "Test 2"
    assert [2 4 6 8] (candidate 132 2) "Test 3"
    assert [] (candidate 17 89) "Test 4"
    assert true "This prints if this assert fails 2 (also good for debugging!)"
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
