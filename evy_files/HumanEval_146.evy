func specialFilter: num nums: []num
    count := 0
        for num := range nums
            if num > 10
                odd_digits := [1 3 5 7 9]
                number_as_string := sprintf "%v" num
                if (number_as_string[0].(num) in odd_digits) and (number_as_string[-1].(num) in odd_digits)
                    count = count + 1
                end
            end
        end
        return count
end
func check candidate:any
    assert 0 (candidate [5 -2 1 -5])
    assert 1 (candidate [15 -73 14 -15])
    assert 2 (candidate [33 -2 -3 45 21 109])
    assert 4 (candidate [43 -12 93 125 121 109])
    assert 3 (candidate [71 -2 -33 75 21 19])
    assert 0 (candidate [1])
    assert 0 (candidate [])
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
