func numerical_letter_grade:[]string grades:[]num
    letter_grade:[]string
        for gpa := range grades
            if gpa == 4.0
                letter_grade = letter_grade + ["A+"]
            else if gpa > 3.7
                letter_grade = letter_grade + ["A"]
            else if gpa > 3.3
                letter_grade = letter_grade + ["A-"]
            else if gpa > 3.0
                letter_grade = letter_grade + ["B+"]
            else if gpa > 2.7
                letter_grade = letter_grade + ["B"]
            else if gpa > 2.3
                letter_grade = letter_grade + ["B-"]
            else if gpa > 2.0
                letter_grade = letter_grade + ["C+"]
            else if gpa > 1.7
                letter_grade = letter_grade + ["C"]
            else if gpa > 1.3
                letter_grade = letter_grade + ["C-"]
            else if gpa > 1.0
                letter_grade = letter_grade + ["D+"]
            else if gpa > 0.7
                letter_grade = letter_grade + ["D"]
            else if gpa > 0.0
                letter_grade = letter_grade + ["D-"]
            else
                letter_grade = letter_grade + ["E"]
        end
        return letter_grade
end
func check candidate:any
    assert ["A+", "B", "C-", "C", "A-"] (candidate [4.0 3 1.7 2 3.5])
    assert ["D+"] (candidate [1.2])
    assert ["D-"] (candidate [0.5])
    assert ["E"] (candidate [0.0])
    assert ["D", "D-", "C-", "B", "B+"] (candidate [1 0.3 1.5 2.8 3.3])
    assert ["E", "D-"] (candidate [0 0.7])
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
