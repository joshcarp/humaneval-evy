func make_a_pile:[]num n:num
    return [n + 2*i for i := range n]
end
func check
    fails := 0
    total := 0
    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "Test failed: want %v got %v\n" want got
        end
    end
    assert [3 5 7] (make_a_pile 3)
    assert [4 6 8 10] (make_a_pile 4)
    assert [5 7 9 11 13] (make_a_pile 5)
    assert [6 8 10 12 14 16] (make_a_pile 6)
    assert [8 10 12 14 16 18 20 22] (make_a_pile 8)
    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
