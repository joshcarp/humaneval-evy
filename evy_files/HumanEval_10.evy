func make_palindrome:string string:string
    func is_palindrome:bool string:string
        return string == string[-1:0:-1]
    end
    
    if not string
        return ""
    end
    
    beginning_of_suffix:num = 0
    
    while not is_palindrome string[beginning_of_suffix:]
        beginning_of_suffix = beginning_of_suffix + 1
    end
    
    return string + string[:beginning_of_suffix][-1:0:-1]
    end
end
func check
    assert "" (make_palindrome "")
    assert "x" (make_palindrome "x")
    assert "xyzyx" (make_palindrome "xyz")
    assert "xyx" (make_palindrome "xyx")
    assert "jerryrrej" (make_palindrome "jerry")
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
