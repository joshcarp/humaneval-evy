func prod_signs: any arr: []num
    if (len arr) == 0
        return false
    end
    prod := 0
    if has arr 0
        prod = 0
    else
        neg_count := 0
        for i := range arr
            if arr[i] < 0
                neg_count = neg_count + 1
            end
        end
        if neg_count % 2 == 0
            prod = 1
        else
            prod = -1
        end
    end
    sum := 0
    for i := range arr
        sum = sum + abs arr[i]
    end
    return prod * sum
    end
end
func check candidate:any
    assert -9 (candidate [1 2 2 -4])
    assert 0 (candidate [0 1])
    assert -10 (candidate [1 1 1 2 3 -1 1])
    assert false (candidate [])
    assert 20 (candidate [2 4 1 2 -1 -1 9])
    assert 4 (candidate [-1 1 -1 1])
    assert -4 (candidate [-1 1 1 1])
    assert 0 (candidate [-1 1 1 0])
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
