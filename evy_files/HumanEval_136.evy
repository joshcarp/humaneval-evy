func largest_smallest_integers:[]any lst:[]num
    smallest:[]num
    largest:[]num
    for x := range lst
        if x < 0
            smallest = smallest + [x]
        end
        if x > 0
            largest = largest + [x]
        end
    end
    return [if (len smallest) > 0 max smallest else "None" if (len largest) > 0 min largest else "None"]
end
func check candidate:any
    assert candidate [2 4 1 3 5 7] == ["None" 1]
    assert candidate [2 4 1 3 5 7 0] == ["None" 1]
    assert candidate [1 3 2 4 5 6 -2] == [-2 1]
    assert candidate [4 5 3 6 2 7 -7] == [-7 2]
    assert candidate [7 3 8 4 9 2 5 -9] == [-9 2]
    assert candidate [] == ["None" "None"]
    assert candidate [0] == ["None" "None"]
    assert candidate [-1 -3 -5 -6] == [-1 "None"]
    assert candidate [-1 -3 -5 -6 0] == [-1 "None"]
    assert candidate [-6 -4 -4 -3 1] == [-3 1]
    assert candidate [-6 -4 -4 -3 -100 1] == [-3 1]
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
