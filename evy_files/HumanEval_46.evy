func fib4:num n:num
    results:[]num
    results = [0 0 2 0]
    if n < 4
        return results[n]
    end
    
    for _ := range 4 (n + 1)
        results = results + [results[-1] + results[-2] + results[-3] + results[-4]]
        results = results[1:]
    end
    
    return results[-1]
end
func check
    fails := 0
    total := 0

    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "want != got: want %v got %v\n" want got
        end
    end

    assert 4 (fib4 5)
    assert 28 (fib4 8)
    assert 104 (fib4 10)
    assert 386 (fib4 12)

    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
