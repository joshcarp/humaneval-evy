func common:[]num l1:[]num l2:[]num
    ret:{}num
    for e1 := range l1
        for e2 := range l2
            if l1[e1] == l2[e2]
                ret[sprintf "%v" l1[e1]] = true
            end
        end
    end
    result:[]num
    for key := range ret
        result = result + [atoi key]
    end
    return sort result
end
func check
    fails := 0
    total := 0
    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "want != got: want %v got %v\n" want got
        end
    end
    assert [1 5 653] (common [1 4 3 34 653 2 5] [5 7 1 5 9 653 121])
    assert [2 3] (common [5 3 2 8] [3 2])
    assert [2 3 4] (common [4 3 2 8] [3 2 4])
    assert [] (common [4 3 2 8] [])
    printf "%v of %v tests passed\n" (total - fails) total
end
check

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
