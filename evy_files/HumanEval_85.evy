func add:num lst:[]num
    return sum [lst[i] for i := range 1 (len lst) 2 if lst[i] % 2 == 0]
end
func check
    fails := 0
    total := 0
    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "Assertion failed: want %v got %v\n" want got
        end
    end
    assert 88 (add [4 88])
    assert 122 (add [4 5 6 7 2 122])
    assert 0 (add [4 0 6 7])
    assert 12 (add [4 4 6 8])
    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
