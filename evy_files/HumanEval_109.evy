func move_one_ball:bool arr:[]num
    if len arr == 0
        return true
    end
    sorted_array := sort arr
    min_value := min arr
    min_index := index arr min_value
    my_arr := arr[min_index:] + arr[:min_index]
    for i := range (len arr)
        if my_arr[i] != sorted_array[i]
            return false
        end
    end
    return true
end
func check
    fails := 0
    total := 0
    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "This prints if this assert fails: want %v got %v\n" want got
        end
    end
    assert true (move_one_ball [3 4 5 1 2])
    assert true (move_one_ball [3 5 10 1 2])
    assert false (move_one_ball [4 3 1 2])
    assert false (move_one_ball [3 5 4 1 2])
    assert true (move_one_ball [])
    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
