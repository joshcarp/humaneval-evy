func find_closest_elements:[]num numbers:[]num
    closest_pair:[]num
    distance:num
    
    for idx := range numbers
        for idx2 := range numbers
            if idx != idx2
                if distance == 0
                    distance = abs numbers[idx] - numbers[idx2]
                    if numbers[idx] < numbers[idx2]
                        closest_pair = [numbers[idx] numbers[idx2]]
                    else
                        closest_pair = [numbers[idx2] numbers[idx]]
                else
                    new_distance := abs numbers[idx] - numbers[idx2]
                    if new_distance < distance
                        distance = new_distance
                        if numbers[idx] < numbers[idx2]
                            closest_pair = [numbers[idx] numbers[idx2]]
                        else
                            closest_pair = [numbers[idx2] numbers[idx]]
    return closest_pair
end
func check candidate:any
    assert [3.9 4.0] (candidate [1.0 2.0 3.9 4.0 5.0 2.2])
    assert [5.0 5.9] (candidate [1.0 2.0 5.9 4.0 5.0])
    assert [2.0 2.2] (candidate [1.0 2.0 3.0 4.0 5.0 2.2])
    assert [2.0 2.0] (candidate [1.0 2.0 3.0 4.0 5.0 2.0])
    assert [2.2 3.1] (candidate [1.1 2.2 3.1 4.1 5.1])
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
