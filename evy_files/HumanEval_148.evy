func bf:[]string planet1:string planet2:string
    planet_names := ["Mercury" "Venus" "Earth" "Mars" "Jupiter" "Saturn" "Uranus" "Neptune"]
        if not (planet1 in planet_names) or not (planet2 in planet_names) or planet1 == planet2
            return []
        end
        planet1_index := index planet_names planet1
        planet2_index := index planet_names planet2
        if planet1_index < planet2_index
            return planet_names[planet1_index + 1: planet2_index]
        else
            return planet_names[planet2_index + 1: planet1_index]
        end
end
func check candidate:any
    assert ["Saturn" "Uranus"] (candidate "Jupiter" "Neptune")
    assert ["Venus"] (candidate "Earth" "Mercury")
    assert ["Venus" "Earth" "Mars" "Jupiter" "Saturn"] (candidate "Mercury" "Uranus")
    assert ["Earth" "Mars" "Jupiter" "Saturn" "Uranus"] (candidate "Neptune" "Venus")
    assert [] (candidate "Earth" "Earth")
    assert [] (candidate "Mars" "Earth")
    assert [] (candidate "Jupiter" "Makemake")
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
