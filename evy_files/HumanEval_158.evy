func find_max:string words:[]string
    max_word:string
    max_word = sorted words (func a:string b:string
        if (len (set a)) == (len (set b))
            return a < b
        end
        return (len (set a)) > (len (set b))
    end)[0]
    return max_word
end
func check
    fails := 0
    total := 0

    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "assertion failed: want %v got %v\n" want got
        end
    end

    assert "string" (find_max ["name" "of" "string"])
    assert "enam" (find_max ["name" "enam" "game"])
    assert "aaaaaaa" (find_max ["aaaaaaa" "bb" "cc"])
    assert "abc" (find_max ["abc" "cba"])
    assert "footbott" (find_max ["play" "this" "game" "of" "footbott"])
    assert "gonna" (find_max ["we" "are" "gonna" "rock"])
    assert "nation" (find_max ["we" "are" "a" "mad" "nation"])
    assert "this" (find_max ["this" "is" "a" "prrk"])
    assert "b" (find_max ["b"])
    assert "play" (find_max ["play" "play" "play"])

    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
