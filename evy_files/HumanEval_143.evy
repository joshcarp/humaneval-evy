func words_in_sentence:sentence:string
    new_lst:[]string
        for word := range sentence.split " "
            flg := 0
            if (len word) == 1
                flg = 1
            end
            for i := range 2 (len word)
                if (len word) % i == 0
                    flg = 1
                end
            end
            if flg == 0 or (len word) == 2
                new_lst = new_lst + [word]
            end
        end
        return join new_lst " "
end
func check candidate:any
    // Check some simple cases
    assert "is" (candidate "This is a test")
    assert "go for" (candidate "lets go for swimming")
    assert "there is no place" (candidate "there is no place available here")
    assert "Hi am Hussein" (candidate "Hi I am Hussein")
    assert "go for it" (candidate "go for it")
    // Check some edge cases that are easy to work out by hand.
    assert "" (candidate "here")
    assert "is" (candidate "here is")
end
check words_in_sentence

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
