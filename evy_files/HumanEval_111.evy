func histogram:{}string test:string
    dict1:{}num
        list1:[]string
        list1 = test.split(" ")
        t:num
        t = 0
    
        for i := range (len list1)
            if (count list1 list1[i] > t) and list1[i] != ''
                t = count list1 list1[i]
            end
        end
        if t > 0
            for i := range (len list1)
                if (count list1 list1[i] == t)
                    dict1[list1[i]] = t
                end
            end
        end
        return dict1
end
func check candidate:any

    // Check some simple cases
    assert {"a":2,"b": 2} (candidate 'a b b a')
    assert {"a": 2, "b": 2} (candidate 'a b c a b')
    assert {"a": 1, "b": 1, "c": 1, "d": 1, "g": 1} (candidate 'a b c d g')
    assert {"r": 1,"t": 1,"g": 1} (candidate 'r t g')
    assert {"b": 4} (candidate 'b b b b a')
    assert {"r": 1,"t": 1,"g": 1} (candidate 'r t g')
    
    // Check some edge cases that are easy to work out by hand.
    assert {} (candidate '')
    assert {"a": 1} (candidate 'a')
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
