func sort_numbers:string numbers:string
    value_map:{}num
    value_map.zero = 0
    value_map.one = 1
    value_map.two = 2
    value_map.three = 3
    value_map.four = 4
    value_map.five = 5
    value_map.six = 6
    value_map.seven = 7
    value_map.eight = 8
    value_map.nine = 9
    nums:[]string
    nums = numbers.split ' '
    nums = sort nums (func a:string b:string
        return value_map[a] < value_map[b]
    end)
    return join nums ' '
end
func check candidate:any
    assert "" == candidate ""
    assert "three" == candidate "three"
    assert "three five nine" == candidate "three five nine"
    assert "zero four five seven eight nine" == candidate "five zero four seven nine eight"
    assert "zero one two three four five six" == candidate "six five four three two one zero"
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
