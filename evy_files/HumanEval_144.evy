func simplify:bool x:string n:string
    a, b := x.split "/"
    c, d := n.split "/"
    numerator := (a.(num)) * (c.(num))
    denom := (b.(num)) * (d.(num))
    if numerator / denom == (numerator / denom).(num)
        return true
    end
    return false
end
func check candidate:any
    assert true (candidate "1/5" "5/1")
    assert false (candidate "1/6" "2/1")
    assert true (candidate "5/1" "3/1")
    assert false (candidate "7/10" "10/2")
    assert true (candidate "2/10" "50/10")
    assert true (candidate "7/2" "4/2")
    assert true (candidate "11/6" "6/1")
    assert false (candidate "2/3" "5/2")
    assert false (candidate "5/2" "3/5")
    assert true (candidate "2/4" "8/4")
    assert true (candidate "2/4" "4/2")
    assert true (candidate "1/5" "5/1")
    assert false (candidate "1/5" "1/5")
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
