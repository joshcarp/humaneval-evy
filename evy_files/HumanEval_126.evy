func is_sorted:bool lst:[]num
    count_digit:{}num
    for i := range lst
        if has count_digit (sprintf "%v" lst[i])
            count_digit[sprintf "%v" lst[i]] = count_digit[sprintf "%v" lst[i]] + 1
        else
            count_digit[sprintf "%v" lst[i]] = 1
        end
    end
    for i := range count_digit
        if count_digit[i] > 2
            return false
        end
    end
    for i := range 1 (len lst)
        if lst[i-1] > lst[i]
            return false
        end
    end
    return true
end
func check:bool candidate:any
    assert true (candidate [5])
    assert true (candidate [1 2 3 4 5])
    assert false (candidate [1 3 2 4 5])
    assert true (candidate [1 2 3 4 5 6])
    assert true (candidate [1 2 3 4 5 6 7])
    assert false (candidate [1 3 2 4 5 6 7])
    assert true (candidate [])
    assert true (candidate [1])
    assert false (candidate [3 2 1])
    assert false (candidate [1 2 2 2 3 4])
    assert false (candidate [1 2 3 3 3 4])
    assert true (candidate [1 2 2 3 3 4])
    assert true (candidate [1 2 3 4])
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
