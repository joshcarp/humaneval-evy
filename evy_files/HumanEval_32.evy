func find_zero:float xs:[]num
    begin := -1.0
    end := 1.0
    while poly(xs begin) * poly(xs end) > 0
        begin = begin * 2.0
        end = end * 2.0
    end
    while end - begin > 1e-10
        center := (begin + end) / 2.0
        if poly(xs center) * poly(xs begin) > 0
            begin = center
        else
            end = center
        end
    end
    return begin
end
func check
    fails := 0
total := 0
for _ := range 100
    ncoeff := 2 * random 1 4
    coeffs:[]num
    for _ := range ncoeff
        coeff := random -10 10
        if coeff == 0
            coeff = 1
        end
        coeffs = coeffs + [coeff]
    end
    solution := find_zero coeffs
    assert math.abs(poly(coeffs solution)) < 1e-4
end
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
