func string_sequence:string n:num
    res:string
    for i := range (n + 1)
        res = res + sprintf "%v " i
    end
    return res[:-1]
end
func check
    fails := 0
    total := 0

    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "want != got: want %v got %v\n" want got
        end
    end

    assert "0" (string_sequence 0)
    assert "0 1 2 3" (string_sequence 3)
    assert "0 1 2 3 4 5 6 7 8 9 10" (string_sequence 10)

    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
