func any_int:bool x:any y:any z:any
    if typeof x == "num" and typeof y == "num" and typeof z == "num" and x == floor x and y == floor y and z == floor z
        if (x + y == z) or (x + z == y) or (y + z == x)
            return true
        end
        return false
    end
    return false
    end
end
func check candidate:any
    assert true (candidate 2 3 1)
    assert false (candidate 2.5 2 3)
    assert false (candidate 1.5 5 3.5)
    assert false (candidate 2 6 2)
    assert true (candidate 4 2 2)
    assert false (candidate 2.2 2.2 2.2)
    assert true (candidate -4 6 2)
    assert true (candidate 2 1 1)
    assert true (candidate 3 4 7)
    assert false (candidate 3.0 4 7)
end
check any_int

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
