func special_factorial:num n:num
    fact_i := 1
    special_fact := 1
    for i := range 1 (n+1)
        fact_i = fact_i * i
        special_fact = special_fact * fact_i
    end
    return special_fact
end
func check
    fails := 0
total := 0

func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "Test failed: want %v got %v\n" want got
    end
end

// -- Test Cases Start -- //
assert 288 (special_factorial 4)
assert 34560 (special_factorial 5)
assert 125411328000 (special_factorial 7)
assert 1 (special_factorial 1)
// -- Test Cases End -- //

if fails == 0
    print "All tests passed!"
else
    printf "%v of %v tests failed.\n" fails total
end
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
