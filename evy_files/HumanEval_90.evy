func next_smallest:any lst:[]num
    lst = unique sort lst
        if len lst < 2
            return false
        end
        return lst[1]
    end
end
func check
    fails := 0
    total := 0

    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "want != got: want %v got %v\n" want got
        end
    end

    assert 2 (next_smallest [1 2 3 4 5])
    assert 2 (next_smallest [5 1 4 3 2])
    assert false (next_smallest [])
    assert false (next_smallest [1 1])
    assert 1 (next_smallest [1 1 1 1 0])
    assert false (next_smallest [1 0**0])
    assert -35 (next_smallest [-35 34 12 -45])

    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
