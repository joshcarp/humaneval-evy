func derivative:[]num xs:[]num
    res:[]num
    for i := range (len xs)
        if i > 0
            res = res + [i * xs[i]]
        end
    end
    return res
end
func check
candidate := derivative
assert [1 4 12 20] (candidate [3 1 2 4 5])
assert [2 6] (candidate [1 2 3])
assert [2 2] (candidate [3 2 1])
assert [2 2 0 16] (candidate [3 2 1 0 4])
assert [] (candidate [1])
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
