func change_base: string x:num base:num
    ret:string
    while x > 0
    ret = sprintf "%v" (x % base) + ret
    x = x / base
    end
    return ret
end
func check
assert "22" (change_base 8 3)
assert "100" (change_base 9 3)
assert "11101010" (change_base 234 2)
assert "10000" (change_base 16 2)
assert "1000" (change_base 8 2)
assert "111" (change_base 7 2)
for x := range 2 8
assert (sprintf "%v" x) (change_base x (x + 1))
end
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
