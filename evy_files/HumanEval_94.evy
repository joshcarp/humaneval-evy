func largestPrimeSum: num lst: []num
    func isPrime: bool n: num
        for i := range 2 (int (n ** 0.5) + 1)
            if n % i == 0
                return false
            end
        end
        return true
    end
    
    maxx := 0
    i := 0
    while i < len lst
        if lst[i] > maxx and isPrime lst[i]
            maxx = lst[i]
        end
        i = i + 1
    end
    result := 0
    for digit := range (sprintf "%v" maxx)
        result = result + int digit
    end
    return result
end
func check candidate: func
    assert 10 (candidate [0 3 2 1 3 5 7 4 5 5 5 2 181 32 4 32 3 2 32 324 4 3])
    assert 25 (candidate [1 0 1 8 2 4597 2 1 3 40 1 2 1 2 4 2 5 1])
    assert 13 (candidate [1 3 1 32 5107 34 83278 109 163 23 2323 32 30 1 9 3])
    assert 11 (candidate [0 724 32 71 99 32 6 0 5 91 83 0 5 6])
    assert 3 (candidate [0 81 12 3 1 21])
    assert 7 (candidate [0 8 1 2 1 7])
    assert 19 (candidate [8191])
    assert 19 (candidate [8191 123456 127 7])
    assert 10 (candidate [127 97 8192])
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
