func sortArray:[]num array:[]num
    sortedArray:[]num
    sortedArray = array
    if (len array) == 0
        return []
    end
    if (array[0] + array[-1]) % 2 == 0
        sortedArray = sorted array reverse:true
    else
        sortedArray = sorted array
    end
    return sortedArray
end
func check
    fails := 0
total := 0

func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end

// -- Test Cases Start -- //
assert [] (sortArray [])
assert [5] (sortArray [5])
assert [0 1 2 3 4 5] (sortArray [2 4 3 0 1 5])
assert [6 5 4 3 2 1 0] (sortArray [2 4 3 0 1 5 6])
assert [1 2] (sortArray [2 1])
assert [0 11 15 32 42 87] (sortArray [15 42 87 32 11 0])
assert [23 21 14 11] (sortArray [21 14 23 11])
// -- Test Cases End -- //
printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
