func max_fill: num grid: [][]num capacity: num
    import math
    
        total := 0
        for arr := range grid
            total = total + math.ceil (sum arr / capacity)
        end
        return total
end
func check candidate:any

    fails := 0
    total := 0

    func assert condition:bool message:string
        total = total + 1
        if not condition
            fails = fails + 1
            print "Assertion failed:" message
        end
    end

    assert (candidate [[0 0 1 0] [0 1 0 0] [1 1 1 1]] 1) == 6 "Error"
    assert (candidate [[0 0 1 1] [0 0 0 0] [1 1 1 1] [0 1 1 1]] 2) == 5 "Error"
    assert (candidate [[0 0 0] [0 0 0]] 5) == 0 "Error"
    assert (candidate [[1 1 1 1] [1 1 1 1]] 2) == 4 "Error"
    assert (candidate [[1 1 1 1] [1 1 1 1]] 9) == 2 "Error"

    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
