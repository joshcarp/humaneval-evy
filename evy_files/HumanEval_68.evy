func pluck:[]num arr:[]num
    if (len arr) == 0
        return []
    end
    evens:[]num
    evens = filter (func x:num return x % 2 == 0 end) arr
    if evens == []
        return []
    end
    return [min evens arr.index (min evens)]
end
func check candidate:any
    assert [2 1] (candidate [4 2 3]) "Error"
    assert [2 1] (candidate [1 2 3]) "Error"
    assert [] (candidate []) "Error"
    assert [0 1] (candidate [5 0 3 0 4 2]) "Error"
    assert [0 3] (candidate [1 2 3 0 5 3]) "Error"
    assert [4 1] (candidate [5 4 8 4 8]) "Error"
    assert [6 1] (candidate [7 6 7 1]) "Error"
    assert [] (candidate [7 9 7 1]) "Error"
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
