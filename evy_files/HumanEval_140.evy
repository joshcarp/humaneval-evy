func fix_spaces:string text:string
    
        new_text:string
        i:num
        start:num
        end:num
        i = 0
        start = 0
        end = 0
        while i < len text
            if text[i] == " "
                end = end + 1
            else
                if end - start > 2
                    new_text = new_text + "-" + text[i]
                elif end - start > 0
                    new_text = new_text + "_" * (end - start) + text[i]
                else
                    new_text = new_text + text[i]
                end
                start = i + 1
                end = i + 1
            end
            i = i + 1
        end
        if end - start > 2
            new_text = new_text + "-"
        elif end - start > 0
            new_text = new_text + "_"
        end
        return new_text
    end
end
func check
    fails := 0
    total := 0
    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "This prints if this assert fails %v (good for debugging!)\n" (total - fails)
        end
    end
    assert "Example" (fix_spaces "Example")
    assert "Mudasir_Hanif_" (fix_spaces "Mudasir Hanif ")
    assert "Yellow_Yellow__Dirty__Fellow" (fix_spaces "Yellow Yellow  Dirty  Fellow")
    assert "Exa-mple" (fix_spaces "Exa   mple")
    assert "-Exa_1_2_2_mple" (fix_spaces "   Exa 1 2 2 mple")
    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
