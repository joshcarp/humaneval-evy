func smallest_change:num arr:[]num
    ans := 0
        for i := range (len arr) / 2
            if arr[i] != arr[(len arr) - i - 1]
                ans = ans + 1
            end
        end
        return ans
end
func check
    fails := 0
    total := 0

    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "want != got: want %v got %v\n" want got
        end
    end

    assert 4 (smallest_change [1 2 3 5 4 7 9 6])
    assert 1 (smallest_change [1 2 3 4 3 2 2])
    assert 1 (smallest_change [1 4 2])
    assert 1 (smallest_change [1 4 4 2])
    assert 0 (smallest_change [1 2 3 2 1])
    assert 0 (smallest_change [3 1 1 3])
    assert 0 (smallest_change [1])
    assert 1 (smallest_change [0 1])

    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
