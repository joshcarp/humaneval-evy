func fruit_distribution:s:string n:num
    lis:[]num
        for i := range (split s ' ')
            if (split s ' ')[i].(string).isdigit
                lis = lis + [((split s ' ')[i]).(num)]
            end
        end
        return n - (sum lis)
end
func check candidate:any
    // Check some simple cases
    assert 8 (candidate "5 apples and 6 oranges" 19)
    assert 10 (candidate "5 apples and 6 oranges" 21)
    assert 2 (candidate "0 apples and 1 oranges" 3)
    assert 2 (candidate "1 apples and 0 oranges" 3)
    assert 95 (candidate "2 apples and 3 oranges" 100)
    assert 0 (candidate "2 apples and 3 oranges" 5)
    assert 19 (candidate "1 apples and 100 oranges" 120)
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
