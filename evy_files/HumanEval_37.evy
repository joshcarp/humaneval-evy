func sortEven:[]num l:[]num
    evens:[]num
    odds:[]num
    ans:[]num
    for i := range l
        if i % 2 == 0
            evens = evens + [l[i]]
        else
            odds = odds + [l[i]]
        end
    end
    evens = sort evens
    i := 0
    j := 0
    while i < len evens or j < len odds
        if i < len evens
            ans = ans + [evens[i]]
            i = i + 1
        end
        if j < len odds
            ans = ans + [odds[j]]
            j = j + 1
        end
    end
    return ans
end
func check candidate:any
    fails := 0
    total := 0
    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "want != got: want %v got %v\n" want got
        end
    end
    assert [1 2 3] (candidate [1 2 3])
    assert [-10 3 -5 2 -3 3 5 0 9 1 123] (candidate [5 3 -5 2 -3 3 9 0 123 1 -10])
    assert [-12 8 3 4 5 2 12 11 23 -10] (candidate [5 8 -12 4 23 2 3 11 12 -10])
    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
