func encode:string message:string
    vowels := "aeiouAEIOU"
    vowels_replace:{}string
    for i := range vowels
        vowels_replace[vowels[i]] = sprintf "%c" (ord vowels[i] + 2)
    end
    message = swapcase message
    result := ""
    for i := range message
        if has vowels_replace message[i]
            result = result + vowels_replace[message[i]]
        else
            result = result + message[i]
        end
    end
    return result
end
func check
    fails := 0
    total := 0
    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "This prints if this assert fails %v (good for debugging!)\n" (total - fails)
        end
    end
    assert "tgst" (encode "TEST")
    assert "mWDCSKR" (encode "Mudasir")
    assert "ygs" (encode "YES")
    assert "tHKS KS C MGSSCGG" (encode "This is a message")
    assert "k dQnT kNqW wHcT Tq wRkTg" (encode "I DoNt KnOw WhAt tO WrItE")
    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
