func cycpattern_check:bool a:string b:string
    l := len b
        pat := b + b
        for i := range (len a) - l + 1
            for j := range l + 1
                if a[i:i+l] == pat[j:j+l]
                    return true
                end
            end
        end
        return false
end
func check candidate:any
    fails := 0
    total := 0

    func assert want:any got:any
        total = total + 1
        if want != got
            fails = fails + 1
            printf "test #%v failed: expected %v, got %v\n" (total - 1) want got
        end
    end

    assert false (candidate "xyzw" "xyw")
    assert true (candidate "yello" "ell")
    assert false (candidate "whattup" "ptut")
    assert true (candidate "efef" "fee")
    assert false (candidate "abab" "aabb")
    assert true (candidate "winemtt" "tinem")

    printf "%v of %v tests passed\n" (total - fails) total
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
