func triangle_area:num a:num b:num c:num
    if a + b <= c or a + c <= b or b + c <= a
        return -1
    end
    s := (a + b + c) / 2
    area := (s * (s - a) * (s - b) * (s - c)) ** 0.5
    area = round area 2
    return area
    end
end
func check
    assert 6.00 (triangle_area 3 4 5)
    assert -1 (triangle_area 1 2 10)
    assert 8.18 (triangle_area 4 8 5)
    assert 1.73 (triangle_area 2 2 2)
    assert -1 (triangle_area 1 2 3)
    assert 16.25 (triangle_area 10 5 7)
    assert -1 (triangle_area 2 6 3)
    assert 0.43 (triangle_area 1 1 1)
    assert -1 (triangle_area 2 2 10)
end

func abs:num x:num
    if x < 0
        return -x
    end
    return x
end
fails := 0
total := 0
func assert want:any got:any
    total = total + 1
    if want != got
        fails = fails + 1
        printf "want != got: want %v got %v\n" want got
    end
end
func finished
    printf "%v of %v tests passed\n" (total - fails) total
end
check
finished
